{
  "openapi": "3.0.0",
  "info": {
    "title": "AMI",
    "description": "fuck the cs hse",
    "contact": {},
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://bestdomainever.com/api",
      "variables": {}
    }
  ],
  "tags": [
    {
      "name": "auth",
      "description": "about authentication"
    },
    {
      "name": "students",
      "description": "about students"
    },
    {
      "name": "groups",
      "description": "about groups"
    },
    {
      "name": "deadlines",
      "description": ""
    }
  ],
  "paths": {
    "/deadlines/{deadline_id}": {
      "get": {
        "tags": [
          "deadlines"
        ],
        "summary": "Get deadline",
        "description": "Get deadline",
        "operationId": "GetDeadline",
        "parameters": [
          {
            "name": "deadline_id",
            "in": "path",
            "description": "ID of deadline to return",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns deadline with that id",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Deadline"
                }
              }
            }
          },
          "400": {
            "description": "Invalid query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse_Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse_Error"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "deadlines"
        ],
        "summary": "Update deadline",
        "description": "Updates deadline",
        "operationId": "UpdateDeadline",
        "parameters": [
          {
            "name": "deadline_id",
            "in": "path",
            "description": "ID of deadline to update",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Data of deadline to be stored",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Deadline"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {}
          },
          "400": {
            "description": "Invalid query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse_Error"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/deadlines/all": {
      "get": {
        "tags": [
          "deadlines"
        ],
        "summary": "Get all deadlines",
        "description": "Get all deadlines",
        "operationId": "GetAllDeadlines",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns list of all available deadlines. In MVP does not support\npagination, it returns all deadlines in once.\n",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Deadline"
                  },
                  "description": "Returns list of all available deadlines. In MVP does not support\npagination, it returns all deadlines in once.\n"
                }
              }
            }
          },
          "400": {
            "description": "Invalid query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse_Error"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/groups/{group_id}": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Get one group",
        "description": "Get one group",
        "operationId": "GetOneGroup",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "description": "Id of a group to retrieve information about",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns information about group with id `group_id`.\n",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "400": {
            "description": "Invalid query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse_Error"
                }
              }
            }
          },
          "404": {
            "description": "Group not found"
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "groups"
        ],
        "summary": "Update group's info",
        "description": "Update group's info",
        "operationId": "UpdateGroup'sInfo",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "description": "Id of a group to retrieve information about",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "JSON with new data to store in system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Group is successfully updated\n",
            "headers": {}
          },
          "400": {
            "description": "Invalid query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse_Error"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/groups/{group_id}/deadlines": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Get all deadlines of group",
        "description": "Get all deadlines of group",
        "operationId": "GetAllDeadlinesOfGroup",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "description": "Id of a group to retrieve information about",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns list of deadlines that are attached to given group\n",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Deadline"
                  },
                  "description": "Returns list of deadlines that are attached to given group\n"
                }
              }
            }
          },
          "400": {
            "description": "Invalid query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse_Error"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/groups/{group_id}/deadlines/new": {
      "post": {
        "tags": [
          "deadlines"
        ],
        "summary": "Create new deadline",
        "description": "Create new deadline",
        "operationId": "CreateNewDeadline",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "description": "Id of a group to retrieve information about",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeadlineBase"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Deadline"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/groups/{group_id}/students": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Get all students that are part of group",
        "description": "Get all students that are part of group",
        "operationId": "GetAllStudentsThatArePartOfGroup",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "description": "Id of a group to retrieve information about",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns list of students that are attended to given group\n",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Student"
                  },
                  "description": "Returns list of students that are attended to given group\n"
                }
              }
            }
          },
          "400": {
            "description": "Invalid query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse_Error"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found"
          }
        },
        "deprecated": false
      }
    },
    "/groups/all": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Get all groups",
        "description": "Get all groups",
        "operationId": "GetAllGroups",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns list of all available groups. In MVP does not support\npagination, it returns all groups in once.\n",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Group"
                  },
                  "description": "Returns list of all available groups. In MVP does not support\npagination, it returns all groups in once.\n"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/groups/new": {
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Create new group",
        "description": "Create new group",
        "operationId": "CreateNewGroup",
        "parameters": [],
        "requestBody": {
          "description": "Data of new group to store,m",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupBase"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Group successfully created",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "400": {
            "description": "Invalid query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse_Error"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/students/{id}": {
      "get": {
        "tags": [
          "students"
        ],
        "summary": "Get one student",
        "description": "Get one student",
        "operationId": "GetOneStudent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of student to return",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Student"
                }
              }
            }
          },
          "400": {
            "description": "Invalid query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse_Error"
                }
              }
            }
          },
          "404": {
            "description": "Student not found"
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "students"
        ],
        "summary": "Update student info",
        "description": "Gets dictionary with student's description, then updates these fields in  database.\n",
        "operationId": "UpdateStudentInfo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of student to return",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "New data to store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentBase"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          },
          "400": {
            "description": "Invalid query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse_Error"
                }
              }
            }
          },
          "404": {
            "description": "student with such id not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse_Error"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/students/{student_id}/deadlines": {
      "get": {
        "tags": [
          "students"
        ],
        "summary": "Get all student's deadlines",
        "description": "Get all student's deadlines",
        "operationId": "GetAllStudent'sDeadlines",
        "parameters": [
          {
            "name": "student_id",
            "in": "path",
            "description": "ID of student to return",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Deadline"
                  },
                  "description": "ok"
                }
              }
            }
          },
          "400": {
            "description": "Invalid query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse_Error"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/students/{student_id}/groups": {
      "get": {
        "tags": [
          "students"
        ],
        "summary": "Get all groups containing studnet",
        "description": "Get all groups containing studnet",
        "operationId": "GetAllGroupsContainingStudnet",
        "parameters": [
          {
            "name": "student_id",
            "in": "path",
            "description": "ID of student to return",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Group"
                  },
                  "description": "ok"
                }
              }
            }
          },
          "400": {
            "description": "Invalid query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse_Error"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/students/all": {
      "get": {
        "tags": [
          "students"
        ],
        "summary": "addPet",
        "description": "Returns `count` students from offset `offset`.\n",
        "operationId": "AddPet",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK, return data",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Student"
                  },
                  "description": "OK, return data"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/students/new": {
      "post": {
        "tags": [
          "students"
        ],
        "summary": "Create user\n",
        "description": "Creates new user in system\n",
        "operationId": "CreateUser\n",
        "parameters": [],
        "requestBody": {
          "description": "New student data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentBase"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Student"
                }
              }
            }
          },
          "400": {
            "description": "Invalid query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse_Error"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "components": {
    "schemas": {
      "DateTime": {
        "title": "DateTime",
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Deadline": {
        "title": "Deadline",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "group_id": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "$ref": "#/components/schemas/DateTime"
          },
          "header": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "valid_until": {
            "$ref": "#/components/schemas/DateTime"
          }
        }
      },
      "DeadlineBase": {
        "title": "DeadlineBase",
        "type": "object",
        "properties": {
          "group_id": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "$ref": "#/components/schemas/DateTime"
          },
          "header": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "valid_until": {
            "$ref": "#/components/schemas/DateTime"
          }
        }
      },
      "ErrorDescription": {
        "title": "ErrorDescription",
        "type": "object",
        "properties": {
          "ru": {
            "type": "string"
          },
          "en": {
            "type": "string"
          }
        }
      },
      "File": {
        "title": "File",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "url": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Group": {
        "title": "Group",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "full_name": {
            "type": "string"
          },
          "short_name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "is_hidden": {
            "type": "boolean"
          }
        }
      },
      "GroupBase": {
        "title": "GroupBase",
        "type": "object",
        "properties": {
          "full_name": {
            "type": "string"
          },
          "short_name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "is_hidden": {
            "type": "boolean"
          }
        }
      },
      "Material": {
        "title": "Material",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "group_id": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "$ref": "#/components/schemas/DateTime"
          },
          "header": {
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        }
      },
      "Name": {
        "title": "Name",
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "example": "Иван"
          },
          "last_name": {
            "type": "string",
            "example": "Иванов"
          },
          "patronymic_name": {
            "type": "string",
            "example": "Иванович"
          }
        }
      },
      "Notify": {
        "title": "Notify",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "group_id": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "$ref": "#/components/schemas/DateTime"
          },
          "header": {
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        }
      },
      "ServerErrorResponse_Error": {
        "title": "ServerErrorResponse_Error",
        "type": "object",
        "properties": {
          "error_code": {
            "type": "integer",
            "format": "int32",
            "example": 400
          },
          "error_subcode": {
            "type": "integer",
            "format": "int32"
          },
          "error_description": {
            "$ref": "#/components/schemas/ErrorDescription"
          }
        }
      },
      "Student": {
        "title": "Student",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "birth_date": {
            "type": "integer",
            "format": "int32",
            "example": 905256000
          },
          "email": {
            "type": "string",
            "example": "john_smith@example.com"
          },
          "telegram_account": {
            "type": "string",
            "example": "@example"
          }
        }
      },
      "StudentBase": {
        "title": "StudentBase",
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "birth_date": {
            "type": "integer",
            "format": "int32",
            "example": 905256000
          },
          "email": {
            "type": "string",
            "example": "john_smith@example.com"
          },
          "telegram_account": {
            "type": "string",
            "example": "@example"
          }
        }
      },
      "StudentJar": {
        "title": "StudentJar",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "students": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Student"
            },
            "description": ""
          }
        }
      }
    }
  }
}
